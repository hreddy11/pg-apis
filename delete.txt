import requests
from google.auth import default

def get_access_token():
  """Retrieves an access token using Google Cloud Application Default Credentials."""
  credentials, project_id = default()
  if credentials.requires_explicit_scopes():
    credentials.refresh(scopes=["https://www.googleapis.com/auth/cloud-platform"])
  return credentials.token

def trigger_dag(request):
  """Triggers a Cloud Composer DAG using the Airflow REST API."""

  # Replace with your Airflow web server URL and DAG ID
  url = "https://<AIRFLOW_WEB_SERVER_URL>/api/experimental/dags/<DAG_ID>/dag_runs"

  # Retrieve access token securely
  access_token = get_access_token()
  headers = {"Authorization": f"Bearer {access_token}"}

  # Optional: Set additional configuration for the DAG run
  data = {"conf": {"key": "value"}}

  try:
    response = requests.post(url, headers=headers, json=data)
    response.raise_for_status()
    print(f"Successfully triggered DAG: {response.json()}")
  except requests.exceptions.RequestException as e:
    print(f"Error triggering DAG: {e}")

  return "DAG triggered successfully!"
